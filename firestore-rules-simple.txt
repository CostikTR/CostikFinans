rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Admin kontrolü için helper function
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }
    
    function isSuperAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    // Kullanıcı kendi verisini okuyup/yazabilir VEYA admin ise tüm kullanıcı verilerini okuyabilir
    match /users/{uid} {
      allow read: if (request.auth != null && request.auth.uid == uid) || isAdmin();
      allow write: if (request.auth != null && request.auth.uid == uid) || isSuperAdmin();

      // Alt koleksiyonlar - kullanıcı kendi verisini veya admin tüm verileri okuyabilir
      match /{document=**} {
        allow read: if (request.auth != null && request.auth.uid == uid) || isAdmin();
        allow write: if (request.auth != null && request.auth.uid == uid) || isSuperAdmin();
      }
    }

    // Varsayılan: erişim yok
    match /{document=**} {
      allow read, write: if false;
    }
  }
}