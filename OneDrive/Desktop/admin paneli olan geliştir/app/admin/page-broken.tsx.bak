"use client"

import { useState, useEffect } from "react"
import { useAuth } from "@/components/auth-guard"
import { useRouter } from "next/navigation"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Badge } from "@/components/ui/badge"
import { 
  Users, 
  TrendingUp, 
  Settings, 
  Shield, 
  Activity,
  Database,
  Bell,
  BarChart3,
  CreditCard,
  Wallet
} from "lucide-react"
import { db } from "@/lib/firebase"
import { collection, getDocs, query, where, orderBy, limit } from "firebase/firestore"

export default function AdminDashboard() {
  const { user } = useAuth()
  const router = useRouter()
  const [activeTab, setActiveTab] = useState("overview")
  const [stats, setStats] = useState({
    totalUsers: 0,
    activeUsers: 0,
    onlineUsers: 0,
    newUsersToday: 0,
    totalTransactions: 0,
    totalRevenue: 0,
    pendingIssues: 0,
    systemHealth: 0,
    userGrowth: 0,
    activeUserRate: 0
  })
  const [loading, setLoading] = useState(true)

  // Firebase Timestamp'ları güvenli bir şekilde Date'e çeviren helper fonksiyon
  const safeToDate = (timestamp: any): Date => {
    try {
      if (!timestamp) return new Date()
      if (timestamp.toDate && typeof timestamp.toDate === 'function') {
        return timestamp.toDate()
      }
      if (timestamp instanceof Date) {
        return timestamp
      }
      if (typeof timestamp === 'string') {
        return new Date(timestamp)
      }
      if (typeof timestamp === 'number') {
        return new Date(timestamp)
      }
      return new Date()
    } catch (error) {
      console.warn('Error converting timestamp:', timestamp, error)
      return new Date()
    }
  }

  // Gerçek Firebase verilerini çek
  useEffect(() => {
    const fetchRealData = async () => {
      if (!db) {
        console.error('Firebase db not initialized')
        return
      }

      if (!user) {
        console.error('User not authenticated')
        return
      }

      console.log('Admin panel data fetch başlıyor:', {
        userUID: user.uid,
        userEmail: user.email,
        dbReady: !!db,
        timestamp: new Date().toISOString()
      })

      // ⚠️ GEÇICI: Firebase permission sorunu için demo data kullan
      console.log('🔄 Firebase permission sorunu nedeniyle demo verileri yükleniyor...')
      setStats({
        totalUsers: 156,
        activeUsers: 89,
        onlineUsers: 23,
        newUsersToday: 7,
        totalTransactions: 1247,
        totalRevenue: 89450,
        pendingIssues: 3,
        systemHealth: 98.5,
        userGrowth: 12.3,
        activeUserRate: 67.2
      })
      setLoading(false)
      return

      // Aşağıdaki kodlar Firebase rules düzeldiğinde aktif edilecek
      /*
      // Test: Basit bir read işlemi dene
      console.log('Test: Basit Firestore read işlemi deniyor...')
      const testDoc = await getDocs(query(collection(db, 'users'), limit(1)))
      console.log('Test read başarılı:', testDoc.size)

      try {
        setLoading(true)

        // Kullanıcı verileri
        const usersSnapshot = await getDocs(collection(db, 'users'))
        const users = usersSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }))
        
        const totalUsers = users.length
        const onlineUsers = users.filter((user: any) => user.isOnline).length
        
        // Son 30 gün içinde giriş yapan aktif kullanıcılar
        const thirtyDaysAgo = new Date()
        thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30)
        const activeUsers = users.filter((user: any) => {
          const lastSeen = safeToDate(user.lastSeen)
          return lastSeen && lastSeen > thirtyDaysAgo
        }).length

        // Bugün kayıt olan kullanıcılar
        const today = new Date()
        today.setHours(0, 0, 0, 0)
        const newUsersToday = users.filter((user: any) => {
          const createdAt = safeToDate(user.createdAt)
          return createdAt && createdAt >= today
        }).length

        // İşlem verileri
        const transactionsSnapshot = await getDocs(collection(db, 'transactions'))
        const transactions = transactionsSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }))
        
        const totalTransactions = transactions.length
        const totalRevenue = transactions.reduce((sum: number, transaction: any) => {
          return sum + (Math.abs(transaction.amount) || 0)
        }, 0)

        // Aktivite verileri
        const activitiesSnapshot = await getDocs(
          query(
            collection(db, 'user_activities'), 
            where('action', '==', 'error_occurred'),
            limit(100)
          )
        )
        const pendingIssues = activitiesSnapshot.docs.length

        // Büyüme oranı hesaplama (basit)
        const lastMonthUsers = users.filter((user: any) => {
          const createdAt = safeToDate(user.createdAt)
          const lastMonth = new Date()
          lastMonth.setMonth(lastMonth.getMonth() - 1)
          return createdAt && createdAt >= lastMonth
        }).length

        const userGrowth = totalUsers > 0 ? (lastMonthUsers / totalUsers) * 100 : 0
        const activeUserRate = totalUsers > 0 ? (activeUsers / totalUsers) * 100 : 0
        const systemHealth = pendingIssues < 5 ? 98.5 : pendingIssues < 20 ? 85.0 : 70.0

        setStats({
          totalUsers,
          activeUsers,
          onlineUsers,
          newUsersToday,
          totalTransactions,
          totalRevenue,
          pendingIssues,
          systemHealth,
          userGrowth,
          activeUserRate
        })

      } catch (error) {
        console.error('Error fetching admin data:', error)
        console.error('Error details:', {
          code: (error as any)?.code,
          message: (error as any)?.message,
          stack: (error as any)?.stack
        })
        
        // Firebase permission hatası için özel handling
        if ((error as any)?.code === 'permission-denied' || (error as any)?.message?.includes('permissions')) {
          console.error('⚠️ Firebase permission hatası! Firestore rules\'ını kontrol edin.')
          console.error('Gerekli adımlar:')
          console.error('1. Firebase Console → Firestore Database → Rules')
          console.error('2. Authenticated kullanıcılara read/write izni verin')
          console.error('3. Kullanıcınıza admin/superadmin rolü atayın')
          
          // Geçici olarak mock data göster
          console.log('🔄 Geçici olarak demo verileri yükleniyor...')
          setStats({
            totalUsers: 156,
            activeUsers: 89,
            onlineUsers: 23,
            newUsersToday: 7,
            totalTransactions: 1247,
            totalRevenue: 89450,
            pendingIssues: 3,
            systemHealth: 98.5,
            userGrowth: 12.3,
            activeUserRate: 67.2
          })
          return
        }
        
        // Hata durumunda varsayılan değerler
        setStats({
          totalUsers: 0,
          activeUsers: 0,
          onlineUsers: 0,
          newUsersToday: 0,
          totalTransactions: 0,
          totalRevenue: 0,
          pendingIssues: 0,
          systemHealth: 0,
          userGrowth: 0,
          activeUserRate: 0
        })
      } finally {
        setLoading(false)
      }
    }

    fetchRealData()
  }, [])

  return (
    <div className="container mx-auto p-6 space-y-6">
      {/* Header */}
      <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
        <div>
          <h1 className="text-3xl font-bold">Admin Panel</h1>
          <p className="text-muted-foreground">
            Hoşgeldin, {user?.email} • CostikFinans Yönetim Paneli
          </p>
        </div>
        <Badge variant="secondary" className="flex items-center gap-2">
          <Shield className="h-4 w-4" />
          Yönetici
        </Badge>
      </div>

      {/* Quick Stats */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        <Card className="cursor-pointer hover:shadow-md transition-shadow" onClick={() => router.push('/admin/users')}>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Toplam Kullanıcı</CardTitle>
            <Users className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">
              {loading ? (
                <div className="animate-pulse bg-gray-200 h-8 w-16 rounded"></div>
              ) : (
                stats.totalUsers.toLocaleString()
              )}
            </div>
            <div className="flex items-center gap-4 text-xs text-muted-foreground mt-1">
              <span className="flex items-center gap-1">
                <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                Aktif: {loading ? "..." : stats.activeUsers.toLocaleString()}
              </span>
              <span className="flex items-center gap-1">
                <div className="w-2 h-2 bg-blue-500 rounded-full animate-pulse"></div>
                Online: {loading ? "..." : stats.onlineUsers}
              </span>
            </div>
            <p className="text-xs text-green-600 mt-1">
              {loading ? "Yükleniyor..." : `Bugün +${stats.newUsersToday} yeni üye`}
            </p>
          </CardContent>
        </Card>

        <Card className="cursor-pointer hover:shadow-md transition-shadow">
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Kullanıcı Aktivitesi</CardTitle>
            <Activity className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">
              {loading ? (
                <div className="animate-pulse bg-gray-200 h-8 w-16 rounded"></div>
              ) : (
                `%${stats.activeUserRate.toFixed(1)}`
              )}
            </div>
            <p className="text-xs text-muted-foreground">
              Son 30 günde aktif olan kullanıcı oranı
            </p>
            <div className="w-full bg-gray-200 rounded-full h-2 mt-2">
              <div 
                className="bg-blue-500 h-2 rounded-full transition-all duration-500" 
                style={{ width: loading ? '0%' : `${Math.min(100, stats.activeUserRate)}%` }}
              ></div>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Toplam İşlem</CardTitle>
            <TrendingUp className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">
              {loading ? (
                <div className="animate-pulse bg-gray-200 h-8 w-20 rounded"></div>
              ) : (
                stats.totalTransactions.toLocaleString()
              )}
            </div>
            <p className="text-xs text-muted-foreground">
              Toplam hacim: {loading ? "..." : `₺${stats.totalRevenue.toLocaleString()}`}
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Sistem Durumu</CardTitle>
            <Database className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">
              {loading ? (
                <div className="animate-pulse bg-gray-200 h-8 w-16 rounded"></div>
              ) : (
                `${stats.systemHealth.toFixed(1)}%`
              )}
            </div>
            <p className="text-xs text-muted-foreground">
              {loading ? "..." : `Bekleyen sorun: ${stats.pendingIssues}`}
            </p>
          </CardContent>
        </Card>
      </div>

      {/* Main Content Tabs */}
      <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-4">
        <TabsList className="grid w-full grid-cols-4">
          <TabsTrigger value="overview">Genel Bakış</TabsTrigger>
          <TabsTrigger value="users">Kullanıcılar</TabsTrigger>
          <TabsTrigger value="analytics">Analitik</TabsTrigger>
          <TabsTrigger value="settings">Ayarlar</TabsTrigger>
        </TabsList>

        <TabsContent value="overview" className="space-y-4">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {/* Recent Activity */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Activity className="h-5 w-5" />
                  Son Aktiviteler
                </CardTitle>
                <CardDescription>
                  Sistemdeki son kullanıcı aktiviteleri
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-2">
                  <div className="flex items-center justify-between p-2 bg-muted/50 rounded">
                    <div className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                      <span className="text-sm">Yeni kullanıcı kaydı</span>
                    </div>
                    <span className="text-xs text-muted-foreground">2 dk önce</span>
                  </div>
                  <div className="flex items-center justify-between p-2 bg-muted/50 rounded">
                    <div className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                      <span className="text-sm">Büyük işlem gerçekleşti</span>
                    </div>
                    <span className="text-xs text-muted-foreground">5 dk önce</span>
                  </div>
                  <div className="flex items-center justify-between p-2 bg-muted/50 rounded">
                    <div className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-yellow-500 rounded-full"></div>
                      <span className="text-sm">Sistem bakım tamamlandı</span>
                    </div>
                    <span className="text-xs text-muted-foreground">1 sa önce</span>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Quick Actions */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Settings className="h-5 w-5" />
                  Hızlı İşlemler
                </CardTitle>
                <CardDescription>
                  Sık kullanılan yönetim işlemleri
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-3">
                <Button 
                  variant="outline" 
                  className="w-full justify-start"
                  onClick={() => router.push('/admin/users')}
                >
                  <Users className="h-4 w-4 mr-2" />
                  Kullanıcı Yönetimi
                </Button>
                <Button 
                  variant="outline" 
                  className="w-full justify-start"
                  onClick={() => router.push('/admin/analytics')}
                >
                  <BarChart3 className="h-4 w-4 mr-2" />
                  Raporları Görüntüle
                </Button>
                <Button variant="outline" className="w-full justify-start">
                  <Bell className="h-4 w-4 mr-2" />
                  Bildirim Gönder
                </Button>
                <Button 
                  variant="outline" 
                  className="w-full justify-start"
                  onClick={() => router.push('/admin/settings')}
                >
                  <Database className="h-4 w-4 mr-2" />
                  Sistem Durumu
                </Button>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="users" className="space-y-4">
          <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
            <div>
              <h2 className="text-xl font-semibold">Kullanıcı Yönetimi</h2>
              <p className="text-muted-foreground">Kayıtlı kullanıcıları görüntüleyin ve yönetin</p>
            </div>
            <Button onClick={() => router.push('/admin/users')}>
              <Users className="h-4 w-4 mr-2" />
              Detaylı Görünüm
            </Button>
          </div>
          <Card>
            <CardHeader>
              <CardTitle>Kullanıcı İstatistikleri</CardTitle>
              <CardDescription>
                Sistemdeki kullanıcıların genel durumu
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div className="text-center p-4 bg-muted/50 rounded">
                  <div className="text-2xl font-bold text-blue-600">{stats.totalUsers}</div>
                  <div className="text-sm text-muted-foreground">Toplam Kullanıcı</div>
                </div>
                <div className="text-center p-4 bg-muted/50 rounded">
                  <div className="text-2xl font-bold text-green-600">892</div>
                  <div className="text-sm text-muted-foreground">Aktif Kullanıcı</div>
                </div>
                <div className="text-center p-4 bg-muted/50 rounded">
                  <div className="text-2xl font-bold text-orange-600">45</div>
                  <div className="text-sm text-muted-foreground">Bu Ay Yeni</div>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="analytics" className="space-y-4">
          <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
            <div>
              <h2 className="text-xl font-semibold">Analitik ve Raporlar</h2>
              <p className="text-muted-foreground">Detaylı istatistikler ve trend analizleri</p>
            </div>
            <Button onClick={() => router.push('/admin/analytics')}>
              <BarChart3 className="h-4 w-4 mr-2" />
              Detaylı Analitik
            </Button>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">Günlük Özet</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  <div className="flex justify-between">
                    <span className="text-sm text-muted-foreground">Bugün İşlem</span>
                    <span className="font-medium">127</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm text-muted-foreground">Günlük Hacim</span>
                    <span className="font-medium">₺45,230</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm text-muted-foreground">Yeni Kullanıcı</span>
                    <span className="font-medium">8</span>
                  </div>
                </div>
              </CardContent>
            </Card>
            
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">Haftalık Trend</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  <div className="flex justify-between items-center">
                    <span className="text-sm text-muted-foreground">İşlem Artışı</span>
                    <span className="font-medium text-green-600">+12.5%</span>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-sm text-muted-foreground">Kullanıcı Artışı</span>
                    <span className="font-medium text-green-600">+8.2%</span>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-sm text-muted-foreground">Hacim Artışı</span>
                    <span className="font-medium text-green-600">+15.7%</span>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle className="text-lg">Popüler Kategoriler</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  <div className="flex justify-between">
                    <span className="text-sm text-muted-foreground">1. Gıda</span>
                    <span className="font-medium">35%</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm text-muted-foreground">2. Ulaşım</span>
                    <span className="font-medium">25%</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm text-muted-foreground">3. Eğlence</span>
                    <span className="font-medium">20%</span>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="settings" className="space-y-4">
          <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
            <div>
              <h2 className="text-xl font-semibold">Sistem Ayarları</h2>
              <p className="text-muted-foreground">Genel uygulama ayarlarını yönetin</p>
            </div>
            <Button onClick={() => router.push('/admin/settings')}>
              <Settings className="h-4 w-4 mr-2" />
              Detaylı Ayarlar
            </Button>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">Genel</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  <div className="flex justify-between">
                    <span className="text-sm text-muted-foreground">Bakım Modu</span>
                    <Badge variant="secondary">Kapalı</Badge>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm text-muted-foreground">Kayıt</span>
                    <Badge variant="default">Açık</Badge>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm text-muted-foreground">Versiyon</span>
                    <span className="text-sm font-medium">v1.0.0</span>
                  </div>
                </div>
              </CardContent>
            </Card>
            
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">Güvenlik</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  <div className="flex justify-between">
                    <span className="text-sm text-muted-foreground">2FA</span>
                    <Badge variant="secondary">Kapalı</Badge>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm text-muted-foreground">Oturum</span>
                    <span className="text-sm font-medium">24 saat</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm text-muted-foreground">SSL</span>
                    <Badge variant="default">Aktif</Badge>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle className="text-lg">Yedekleme</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  <div className="flex justify-between">
                    <span className="text-sm text-muted-foreground">Otomatik</span>
                    <Badge variant="default">Günlük</Badge>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm text-muted-foreground">Son Yedek</span>
                    <span className="text-sm font-medium">2 sa önce</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm text-muted-foreground">Boyut</span>
                    <span className="text-sm font-medium">45 MB</span>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>
      </Tabs>
    </div>
  )
}